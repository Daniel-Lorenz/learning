<?xml version="1.0" encoding="UTF-8" standalone="no"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>springjdbctests-parent</artifactId>
		<groupId>customer</groupId>
		<version>${revision}</version>
	</parent>

	<artifactId>springjdbctests</artifactId>
	<packaging>jar</packaging>

	<name>springjdbctests</name>

	<properties>
		<surefire.skipTests>false</surefire.skipTests>
		<surefire.forkCount>3</surefire.forkCount>
		<surefire.include>*</surefire.include>
		<surefire.exclude />
		<surefire.groups />
		<surefire.excludedGroups />
		<surefire.maxMemorySize>1024m</surefire.maxMemorySize>
		<surefire.logLevel>info</surefire.logLevel>
		<surefire.reuseForks>true</surefire.reuseForks>
		<surefire.threadCount>10</surefire.threadCount>

		<!-- Use the argLine property to define the arguments for the JVMs that
			are forked by the surefire plugin. This avoids the need to use late property
			evaluation for configuring the jacoco plugin. Relying on late evaluation
			of properties such as @{argLine} can result in issues with certain IDEs.
			For more details, visit: https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html -->
		<argLine>-Xmx${surefire.maxMemorySize}
			-Dorg.slf4j.simpleLogger.defaultLogLevel=${surefire.logLevel}</argLine>

		<jacoco.executionDataFile>${project.build.directory}/coverage-reports/jacoco.exec</jacoco.executionDataFile>
		<jacoco.includes>*</jacoco.includes>
		<jacoco.excludes>org.apache.*</jacoco.excludes>
	</properties>

	<!-- ACTUAL DEPENDENCIES -->
	<dependencies>
		<dependency>
			<groupId>com.sap.cds</groupId>
			<artifactId>cds-starter-spring-boot-odata</artifactId>
		</dependency>

		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
			<scope>runtime</scope>
		</dependency>
		

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.sap.cds</groupId>
			<artifactId>cds-starter-cloudfoundry</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- SPRING BOOT PLUGIN -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
				<configuration>
					<skip>false</skip>
				</configuration>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>exec</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- STEPS TO BUILD CDS MODEL AND GENERATE POJOs -->
			<plugin>
				<groupId>com.sap.cds</groupId>
				<artifactId>cds-maven-plugin</artifactId>
				<version>${cds.services.version}</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
				</configuration>
				<executions>
					<execution>
						<id>cds.clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>

					<execution>
						<id>cds.install-node</id>
						<goals>
							<goal>install-node</goal>
						</goals>
						<configuration>
							<skip>${cdsdk-global}</skip>
							<downloadUrl>${node.url}</downloadUrl>
						</configuration>
					</execution>

					<execution>
						<id>install-cdsdk</id>
						<goals>
							<goal>install-cdsdk</goal>
						</goals>
						<configuration>
							<skip>${cdsdk-global}</skip>
							<version>${cdsdk.version}</version>
						</configuration>
					</execution>

					<execution>
						<id>cds.build</id>
						<goals>
							<goal>cds</goal>
						</goals>
						<configuration>
							<commands>
								<command>build/all --clean</command>

								<command>deploy --to sqlite --dry &gt;
									${project.basedir}/src/main/resources/schema.sql</command>
							</commands>
						</configuration>
					</execution>

					<execution>
						<id>cds.generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<basePackage>cds.gen</basePackage>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<skipTests>${surefire.skipTests}</skipTests>
					<includes>
						<include>${surefire.include}</include>
					</includes>
					<excludes>
						<exclude>${surefire.exclude}</exclude>
					</excludes>
					<forkCount>${surefire.forkCount}</forkCount>
					<reuseForks>${surefire.reuseForks}</reuseForks>
					<groups>${surefire.groups}</groups>
					<excludedGroups>${surefire.excludedGroups}</excludedGroups>
					<systemPropertyVariables>
						<surefire.forkDir>${project.build.directory}/surefire-fork/${surefire.forkNumber}/</surefire.forkDir>
					</systemPropertyVariables>
					<parallel>methods</parallel>
          			<threadCount>${surefire.threadCount}</threadCount>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- A profile that uses global installation of @sap/cds-dk -->
		<profile>
			<id>cdsdk-global</id>
			<properties>
				<cdsdk-global>true</cdsdk-global>
			</properties>
		</profile>
		<profile>
			<id>htwo</id>
			<properties>
				<spring.profiles.active>htwo</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
</project>